/* src/styles/customStyles.css */
/* Custom styling to fix ReactFlow UI elements */

/* Remove scrollbars and ensure full viewport coverage */
html,
body,
#root {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* App container to fill available space without scrollbars */
.app-container {
  width: 100%;
  height: 100%;
  display: flex;
  overflow: hidden;
}

.reactflow-wrapper {
  flex: 1;
  height: 100%;
  overflow: hidden;
  position: relative; /* Needed for absolute positioning of buttons */
}

/* Button controls in the flow chart - styles moved to component files */
/* Theme toggle styles moved to ThemeToggle.jsx */
/* Fit view button styles moved to FitViewButton.jsx */
/* Reset button styles moved to ResetButton.jsx */

/* Hide the attribution panel at the bottom */
.react-flow__attribution {
  display: none !important;
}

/* Ensure full viewport height */
.react-flow {
  height: 100% !important;
  width: 100% !important;
}

/* Better controls styling */
.react-flow__controls {
  box-shadow: 0 0 5px var(--boxShadow);
  border-radius: 4px;
  background-color: var(--nodeBackground);
}

.react-flow__controls-button {
  border: none !important;
  background: transparent !important;
  transition: background-color 0.2s ease;
}

.react-flow__controls-button:hover {
  background-color: var(--selection) !important;
}

/* Styling for nodes */
.decision-node {
  transition: box-shadow 0.2s ease, transform 0.2s ease;
}

.decision-node:hover {
  box-shadow: 0 4px 8px var(--boxShadowDarker);
  transform: translateY(-2px);
}

/* Different styling for required vs optional nodes */
.decision-node.required:not(.completed) {
  background-color: var(--requiredNode);
  border-color: var(--requiredBorder);
}

.decision-node.optional:not(.completed) {
  background-color: var(--optionalNode);
  border-color: var(--optionalBorder);
}

.decision-node.completed {
  background-color: var(--completedNode);
  border-color: var(--completedBorder);
}

/* Better edge styling */
.react-flow__edge-path {
  stroke-width: 2;
  stroke: var(--comment);
}

.react-flow__edge.animated .react-flow__edge-path {
  stroke: var(--requiredBorder);
}

/* Make handles easier to connect */
.react-flow__handle {
  width: 10px;
  height: 10px;
  transition: background-color 0.2s ease, transform 0.2s ease;
}

.react-flow__handle:hover {
  background-color: var(--requiredBorder);
  transform: scale(1.3);
}

/* Sidebar styling */
.sidebar {
  width: 300px;
  height: 100%;
  padding: 15px;
  border-right: 1px solid var(--border);
  background-color: var(--sidebarBackground);
  overflow-y: hidden; /* Prevent scrollbar from appearing */
  box-shadow: 0 0 10px var(--boxShadow);
  z-index: 5;
  flex-shrink: 0; /* Prevent sidebar from shrinking */
}

/* Make the decision categories scrollable instead */
.decision-categories {
  max-height: calc(100vh - 250px); /* Adjust based on header height */
  overflow-y: auto; /* Use auto scroll */
  position: relative; /* For absolute positioning of scroll indicator */
}

/* Hide scrollbars completely for all browsers */
.decision-categories::-webkit-scrollbar {
  display: none; /* Hide scrollbar in WebKit browsers */
}

/* Firefox scrollbar hiding */
.decision-categories {
  scrollbar-width: none; /* Hide scrollbar in Firefox */
  -ms-overflow-style: none; /* Hide scrollbar in IE/Edge */
}

/* Ensure decision items use full width */
.decision-category {
  width: 100%; /* Full width */
  box-sizing: border-box; /* Include padding in width calculation */
}

/* Add a scroll indicator arrow */
.scroll-indicator {
  position: fixed;
  bottom: 30px;
  left: 150px; /* Center in sidebar */
  font-size: 16px;
  color: var(--comment);
  background-color: var(--nodeBackground);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px var(--boxShadow);
  pointer-events: none; /* Don't interfere with scrolling */
  z-index: 100; /* Ensure it's above other content */
  opacity: 0; /* Hidden by default */
  transition: opacity 0.3s ease;
}

/* Show arrow when scrollable class is added */
.scroll-indicator.visible {
  opacity: 1; /* Visible when class is added */
}

.sidebar-header {
  border-bottom: 1px solid var(--border);
  padding-bottom: 10px;
  margin-bottom: 15px;
}

.sidebar-header h3 {
  margin-top: 0;
  color: var(--green);
}

/* Act section styling */
.act-section {
  margin-bottom: 20px;
}

/* Act header styling */
.act-header h4 {
  margin-top: 0;
  margin-bottom: 10px;
  padding: 8px;
  background-color: var(--currentLine);
  color: var(--foreground);
  border-radius: 4px;
  font-size: 1.1em;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
}

/* Location header styling */
.location-header h4 {
  margin-top: 0;
  margin-bottom: 10px;
  padding: 5px;
  background-color: var(--selection);
  border-radius: 4px;
  font-size: 0.95em;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
}

/* Act content container */
.act-content {
  padding-left: 10px;
}

/* Decision category styling */
.decision-category {
  margin-bottom: 15px;
}

/* Style for the section title container */
.section-title {
  cursor: pointer;
  user-select: none;
  width: 100%; /* Ensure the title container takes full width */
}

/* Style for the collapse/expand icon */
.collapse-icon {
  display: inline-block;
  font-size: 1em;
  transition: transform 0.2s ease;
  position: absolute; /* Position absolutely */
  right: 10px; /* Position at the right edge with some padding */
  top: 50%; /* Center vertically */
  transform: translateY(-50%); /* Adjust for perfect vertical centering */
}

.decision-item {
  padding: 10px;
  margin: 8px 0;
  background-color: var(--nodeBackground);
  border: 1px solid var(--border);
  border-radius: 4px;
  cursor: grab;
  user-select: none;
  transition: all 0.2s ease;
  width: 100%; /* Full width to match headers */
  box-sizing: border-box; /* Include padding in width calculation */
}

.decision-item:hover {
  background-color: var(--selection);
  transform: translateY(-2px);
  box-shadow: 0 2px 5px var(--boxShadow);
}

.decision-item.optional {
  background-color: var(--optionalNode);
  border-color: var(--optionalBorder);
}

.decision-item.required {
  background-color: var(--requiredNode);
  border-color: var(--requiredBorder);
}

.item-title {
  font-weight: bold;
  margin-bottom: 5px;
}

.item-description {
  font-size: 0.8rem;
  color: var(--comment);
}

/* Badges */
.optional-badge,
.required-badge,
.completed-badge {
  display: inline-block;
  font-size: 0.7rem;
  padding: 2px 8px;
  border-radius: 12px;
  color: var(--badgeText);
  margin-right: 5px;
}

.optional-badge {
  background-color: var(--optionalBorder);
}

.required-badge {
  background-color: var(--requiredBorder);
}

.completed-badge {
  background-color: var(--green);
}

/* Buttons */
button.remove-node {
  position: absolute;
  top: -10px;
  right: -10px;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: var(--red);
  color: var(--badgeText);
  border: 2px solid var(--nodeBackground);
  font-size: 12px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  box-shadow: 0 2px 3px var(--boxShadowDarker);
}

button.change-decision {
  display: block;
  margin-top: 8px;
  padding: 4px 8px;
  background-color: var(--buttonBackground);
  border: 1px solid var(--buttonBorder);
  border-radius: 4px;
  font-size: 0.75rem;
  cursor: pointer;
  width: 100%;
}

button.change-decision:hover {
  background-color: var(--selection);
}

/* Decision warning box */
.decision-warning {
  background-color: var(--warningBackground);
  color: var(--warningText);
  padding: 10px;
  border-radius: 6px;
  margin-bottom: 10px;
  font-size: 0.85rem;
  border: 1px solid var(--warningBorder);
}

/* Node options */
.node-options {
  font-size: 0.9rem;
  background: var(--nodeOptionsBackground);
  border-radius: 6px;
  padding: 8px 10px;
  margin-top: 10px;
}

.node-options div[role='button'] {
  cursor: pointer;
  padding: 5px 8px;
  margin: 3px 0;
  border-radius: 4px;
  transition: all 0.2s ease;
  background-color: var(--nodeOptionBackground);
  border: 1px solid transparent;
}

.node-options div[role='button']:hover {
  background-color: var(--nodeOptionHoverBackground);
  border-color: currentColor;
}

/* Selected option display */
.selected-option {
  font-size: 0.9rem;
  margin-top: 8px;
  padding: 8px;
  background: var(--selectedOptionBackground);
  border-radius: 6px;
  border: 1px dashed var(--green);
}

/* Node metadata */
.node-meta {
  font-size: 0.8rem;
  margin-top: 12px;
  color: var(--metaText);
  border-top: 1px dashed var(--metaBorder);
  padding-top: 8px;
}

/* Slider Checkbox Styling */
.checkbox-wrapper-6 {
  position: relative;
  z-index: 10; /* Ensure it's above other elements */
}

.checkbox-wrapper-6 .tgl {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  margin: 0;
  z-index: 1; /* Make it clickable */
}

.checkbox-wrapper-6 .tgl + .tgl-btn {
  outline: 0;
  display: block;
  width: 4em;
  height: 2em;
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  box-sizing: border-box;
}

.checkbox-wrapper-6 .tgl + .tgl-btn:after,
.checkbox-wrapper-6 .tgl + .tgl-btn:before {
  position: relative;
  display: block;
  content: '';
  width: 50%;
  height: 100%;
  box-sizing: border-box;
}

.checkbox-wrapper-6 .tgl + .tgl-btn:after {
  left: 0;
}

.checkbox-wrapper-6 .tgl + .tgl-btn:before {
  display: none;
}

.checkbox-wrapper-6 .tgl:checked + .tgl-btn:after {
  left: 50%;
}

.checkbox-wrapper-6 .tgl-light + .tgl-btn {
  background: var(--selection);
  border-radius: 2em;
  padding: 2px;
  transition: all 0.4s ease;
}

.checkbox-wrapper-6 .tgl-light + .tgl-btn:after {
  border-radius: 50%;
  background: var(--nodeBackground);
  transition: all 0.2s ease;
}

.checkbox-wrapper-6 .tgl-light:checked + .tgl-btn {
  background: var(--green);
}
